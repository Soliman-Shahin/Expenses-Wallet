/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Custom form styles */
@import "theme/forms";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/* Import Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&family=Ubuntu:wght@300;400;500;700&display=swap");

/* Global Styles */
:root {
  --ion-font-family: "Ubuntu", "Cairo", sans-serif;
  --ion-item-border-radius: 12px;
  --ion-box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  --ion-transition: all 0.3s ease;
  --theme-transition-duration: 0.3s;
  --theme-transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Theme Transition */
.theme-transition {
  transition: background-color var(--theme-transition-duration)
      var(--theme-transition-easing),
    color var(--theme-transition-duration) var(--theme-transition-easing),
    border-color var(--theme-transition-duration) var(--theme-transition-easing);
}

/* Apply theme transition to all elements */
* {
  transition: background-color var(--theme-transition-duration)
      var(--theme-transition-easing),
    color var(--theme-transition-duration) var(--theme-transition-easing),
    border-color var(--theme-transition-duration) var(--theme-transition-easing);
}

/* Global Reset & Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  font-family: var(--ion-font-family);
  background-color: var(--ion-background-color);
  color: var(--ion-text-color);
  line-height: 1.6;
}

/* Typography Enhancements */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
  margin-bottom: 1rem;
  color: var(--ion-text-color);
}

p {
  margin-bottom: 1rem;
  line-height: 1.6;
}

/* Card Styles */
ion-card,
.card,
.container {
  border-radius: 18px;
  box-shadow: 0 2px 12px rgba(67, 97, 238, 0.09);
  margin: 18px 0;
  padding: 1.5rem 1.25rem;
  /* For Ionic components (ion-card), prefer setting the CSS var used inside Shadow DOM */
  --background: var(--ion-card-background);
  /* For regular containers use direct background */
  background: var(--ion-card-background);
  border: 1px solid var(--ion-border-color);
  transition: box-shadow 0.22s cubic-bezier(0.4, 0, 0.2, 1),
    transform 0.22s cubic-bezier(0.4, 0, 0.2, 1), background 0.18s;
  animation: fadeInCard 0.4s cubic-bezier(0.4, 0, 0.2, 1);

  &:hover {
    transform: translateY(-6px) scale(1.015);
    box-shadow: 0 4px 18px rgba(67, 97, 238, 0.13);
  }
}

body.dark ion-card,
body.dark .card,
body.dark .container {
  background: var(--ion-card-background);
  border-color: var(--ion-border-color);
  box-shadow: 0 2px 12px rgba(98, 114, 164, 0.13);
}

@keyframes fadeInCard {
  from {
    opacity: 0;
    transform: translateY(16px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// --- Professional Input Styles ---
ion-input,
input,
ion-textarea,
textarea,
ion-select,
select {
  border-radius: 14px !important;
  border: 1.5px solid var(--ion-border-color, #d7d8da);
  background: var(--ion-item-background, #fff);
  color: var(--ion-text-color, #22223b);
  padding: 0.75rem 1rem;
  font-size: 1rem;
  transition: border-color 0.18s, box-shadow 0.18s;
  outline: none;
  box-shadow: 0 1px 4px rgba(67, 97, 238, 0.03);

  &:focus {
    border-color: var(--ion-color-primary, #4361ee);
    box-shadow: 0 2px 10px rgba(67, 97, 238, 0.13);
    background: #f4f6fb;
  }
  &:disabled {
    opacity: 0.55;
    background: #f4f6fb;
    cursor: not-allowed;
  }
}

body.dark ion-input,
body.dark input,
body.dark ion-textarea,
body.dark textarea,
body.dark ion-select,
body.dark select {
  background: #35354b;
  color: #f4f4fa;
  border-color: #6272a4;
}

// --- Remove default ugly outlines for accessibility ---
ion-button:focus,
button:focus,
ion-input:focus,
input:focus,
ion-textarea:focus,
textarea:focus {
  outline: 2px solid var(--ion-color-primary, #4361ee);
  outline-offset: 2px;
}

ion-button {
  --border-radius: 12px;
  --box-shadow: 0 4px 12px var(--ion-color-primary-rgb-transparent);
  --transition: var(--ion-transition);
  font-weight: 600;
  text-transform: none;
  letter-spacing: 0.5px;

  &:hover {
    --box-shadow: 0 6px 16px var(--ion-color-primary-rgb-transparent-hover);
  }
}

/* Form Elements */
ion-item {
  --border-radius: var(--ion-item-border-radius);
  --padding-start: 16px;
  --padding-end: 16px;
  --inner-padding-end: 0;
  --background: var(--ion-item-background);
  --min-height: 56px;
  margin-bottom: 16px;
  border-radius: var(--ion-item-border-radius);
  box-shadow: var(--ion-box-shadow);
  transition: var(--ion-transition);

  &:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }
}

ion-input,
ion-select,
ion-textarea {
  --padding-start: 12px;
  --padding-end: 12px;
  --background: var(--ion-item-background);
  border-radius: var(--ion-item-border-radius);
}

/* === GLOBAL UTILITY CLASSES === */

// Text utilities
.text-center {
  text-align: center;
}
.full-width {
  width: 100%;
}

// Spacing utilities (margin/padding for all directions and sizes)
@each $dir in (t, r, b, l, x, y) {
  @each $i, $val in (1: 0.5rem, 2: 1rem, 3: 1.5rem, 4: 2rem) {
    .m#{$dir}-#{$i} {
      @if $dir == x {
        margin-left: $val;
        margin-right: $val;
      } @else if $dir == y {
        margin-top: $val;
        margin-bottom: $val;
      } @else if $dir == t {
        margin-top: $val;
      } @else if $dir == r {
        margin-right: $val;
      } @else if $dir == b {
        margin-bottom: $val;
      } @else if $dir == l {
        margin-left: $val;
      }
    }
    .p#{$dir}-#{$i} {
      @if $dir == x {
        padding-left: $val;
        padding-right: $val;
      } @else if $dir == y {
        padding-top: $val;
        padding-bottom: $val;
      } @else if $dir == t {
        padding-top: $val;
      } @else if $dir == r {
        padding-right: $val;
      } @else if $dir == b {
        padding-bottom: $val;
      } @else if $dir == l {
        padding-left: $val;
      }
    }
  }
}

// Gap utilities
@each $i, $val in (1: 0.5rem, 2: 1rem, 3: 1.5rem, 4: 2rem) {
  .gap-#{$i} {
    gap: $val;
  }
}

// Rounded utilities
.rounded {
  border-radius: var(--card-border-radius, 12px);
}
.rounded-sm {
  border-radius: 6px;
}
.rounded-lg {
  border-radius: 20px;
}

// Shadow utilities
.shadow {
  box-shadow: var(--shadow-elevated);
}
.shadow-card {
  box-shadow: var(--shadow-card);
}
.shadow-header {
  box-shadow: var(--shadow-header);
}

// Transition utilities
.transition {
  transition: var(--transition-base, all 0.22s cubic-bezier(0.4, 0, 0.2, 1));
}
.transition-fast {
  transition-duration: var(--animation-duration-fast, 120ms);
}
.transition-slow {
  transition-duration: var(--animation-duration-slow, 400ms);
}

/* Animation Classes */
// Usage: Add .fade-in, .fade-in-up, .fade-in-down, .fade-in-left, .fade-in-right, .scale-in to any element for entrance animation.
// All animations respect prefers-reduced-motion for accessibility.

@media (prefers-reduced-motion: reduce) {
  .fade-in,
  .fade-in-up,
  .fade-in-down,
  .fade-in-left,
  .fade-in-right,
  .scale-in {
    animation: none !important;
    transition: none !important;
  }
}

.fade-in {
  animation: fadeIn 0.4s var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-in-up {
  animation: fadeInUp 0.5s var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(32px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-down {
  animation: fadeInDown 0.5s
    var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-32px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-left {
  animation: fadeInLeft 0.5s
    var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-32px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.fade-in-right {
  animation: fadeInRight 0.5s
    var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(32px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.scale-in {
  animation: scaleIn 0.45s var(--animation-easing, cubic-bezier(0.4, 0, 0.2, 1));
}
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.85);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--ion-color-light-shade);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: var(--ion-color-primary);
  border-radius: 10px;

  &:hover {
    background: var(--ion-color-primary-shade);
  }
}

/* RTL Support */
[dir="rtl"] body {
  --ion-font-family: "Cairo", "Ubuntu", sans-serif !important;
}

/* === Custom Toast Styles & Animations === */
.custom-toast {
  --background: var(--ion-card-background, #fff);
  --color: var(--ion-text-color, #22223b);
  --border-radius: 16px;
  --box-shadow: 0 8px 32px rgba(var(--ion-color-primary-rgb, 67, 97, 238), 0.14);
  --padding-start: 1.25rem;
  --padding-end: 1.25rem;
  --min-width: 220px;
  --max-width: 350px;
  font-size: 1.04rem;
  font-weight: 500;
  letter-spacing: 0.01em;
  border: none;
  animation: toastFadeInUp 0.44s cubic-bezier(0.4, 0, 0.2, 1);
  transition: box-shadow 0.22s, background 0.18s;
  // Ensure toast sits above overlays
  z-index: 10010;
}
.custom-toast.ion-leave-active {
  animation: toastFadeOutDown 0.36s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}
@keyframes toastFadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
@keyframes toastFadeOutDown {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(24px) scale(0.95);
  }
}
@media (prefers-reduced-motion: reduce) {
  .custom-toast,
  .custom-toast.ion-leave-active {
    animation: none !important;
    transition: none !important;
  }
}

/* === Custom Loader Overlay Styles & Animations === */
.custom-loader {
  --background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.84);
  --spinner-color: var(--ion-color-primary, #4361ee);
  --border-radius: 18px;
  --box-shadow: 0 6px 28px rgba(var(--ion-color-primary-rgb, 67, 97, 238), 0.11);
  --min-width: 120px;
  --min-height: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  animation: loaderScaleIn 0.38s cubic-bezier(0.4, 0, 0.2, 1);

  // Add a subtle pulse animation to the spinner
  ion-spinner {
    animation: loaderPulse 1.5s ease-in-out infinite;
  }
}
.custom-loader.ion-leave-active {
  animation: loaderFadeOut 0.28s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}
@keyframes loaderScaleIn {
  0% {
    opacity: 0;
    transform: scale(0.7) rotate(0deg);
  }
  70% {
    opacity: 1;
    transform: scale(1.05) rotate(5deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}
@keyframes loaderFadeOut {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.8) rotate(-5deg);
  }
}
// Add a subtle pulse animation to the spinner
@keyframes loaderPulse {
  0% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.9;
  }
}
@media (prefers-reduced-motion: reduce) {
  .custom-loader,
  .custom-loader.ion-leave-active,
  .custom-loader ion-spinner {
    animation: none !important;
    transition: none !important;
  }
}

/* === Accessibility for Toasts and Loaders === */
.custom-toast[role],
.custom-loader[role] {
  outline: none;
}

/* === Loader Overlay === */
.custom-loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.6);
  // Keep loader below toast overlays
  z-index: 9000;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: all;
  transition: background 0.22s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Visually hidden utility for accessibility */
.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
